html
  head
    style
      include ../styles.css

    title #{title}
    link(href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css", rel="stylesheet")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.js")

    body
      div.jumbotron
        h1 SENG 371 - Project #2
        h2 Jian Guan, Jonathan Lam, Paul Moon

      div.container.center-block
        form.form-inline(name="repoForm", action="repo", method="get")
          div.form-group
            input.form-control(type="text", name="repoName", placeholder="Enter a repo name e.g. Bootstrap")
            button.btn.btn-default(type="submit") Search

      div.row
        div.main-chart.col-md-6.col-md-offset-3

      script.
        var data = [
            [2, 2],
            [2, 5],
            [6, 6],
            [6, 7],
            [25, 25]
        ];

        var margin = {
          top: 20,
          right: 20,
          bottom: 30,
          left: 30
        };

        //- var width = 600 + margin.left + margin.right,
            //- height = 600 + margin.top + margin.bottom;

        var width = 600,
            height = 600;

        var svg = d3.select(".main-chart").append("svg")
          .attr("width", width)
          .attr("height", height);

        var x = d3.scale.linear()
          .domain([0, d3.max(data, function (d) {
            return d[0];
          })])
          .range([margin.left, width - margin.right]);
          //- .range([0, width]);

        var y = d3.scale.linear()
          .domain([0, d3.max(data, function (d) {
            return d[1];
          })])  
          //- .range([height - margin.bottom, margin.top]) //flip y
          .range([height - margin.bottom, margin.top]) //flip y

        var xAxis = d3.svg.axis()
            .scale(x)
            //.orient('bottom')
            .orient('bottom'); // adjust ticks to new x axis position

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient('left');

        var line = d3.svg.line()
          .x(function (d) { return x(d[0])})
          .y(function (d) { return y(d[1])});

        svg.append("path")
            .attr('class', 'path')
            .attr('d', line(data));

        svg.append('g')
            .attr('class', 'axis')
            .attr('transform', 'translate(0, ' + (height - margin.bottom) + ')')
            .call(xAxis);

        svg.append('g')
            .attr('class', 'axis')
            .attr('transform', 'translate(' + margin.left + ', 0)')
            .call(yAxis);

        // Border around the graph
        var borderPath = svg.append("rect")
         .attr("x", 0)
         .attr("y", 0)
         .attr("height", height)
         .attr("width", width)
         .style("stroke", "steelblue")
         .style("fill", "none")
         .style("stroke-width", 4);

